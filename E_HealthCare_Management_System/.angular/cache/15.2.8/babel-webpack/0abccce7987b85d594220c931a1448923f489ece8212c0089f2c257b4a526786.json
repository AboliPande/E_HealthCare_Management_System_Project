{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction BookAppointmentComponent_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Patient Id is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BookAppointmentComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, BookAppointmentComponent_div_14_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.patient_id.errors == null ? null : ctx_r0.patient_id.errors[\"required\"]);\n  }\n}\nfunction BookAppointmentComponent_div_19_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Doctor Id is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BookAppointmentComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, BookAppointmentComponent_div_19_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.doctor_id.errors == null ? null : ctx_r1.doctor_id.errors[\"required\"]);\n  }\n}\nfunction BookAppointmentComponent_div_24_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Appointment Date is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BookAppointmentComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, BookAppointmentComponent_div_24_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.appointment_date.errors == null ? null : ctx_r2.appointment_date.errors[\"required\"]);\n  }\n}\nfunction BookAppointmentComponent_div_29_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Payment Field is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BookAppointmentComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, BookAppointmentComponent_div_29_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.payment.errors == null ? null : ctx_r3.payment.errors[\"required\"]);\n  }\n}\nfunction BookAppointmentComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24)(1, \"span\", 25);\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class BookAppointmentComponent {\n  constructor(router) {\n    this.router = router;\n    this.bookAppointmentForm = new FormGroup({\n      patient_id: new FormControl('', [Validators.required]),\n      doctor_id: new FormControl('', [Validators.required]),\n      appointment_date: new FormControl('', [Validators.required]),\n      payment: new FormControl('', Validators.required)\n    });\n  }\n  get patient_id() {\n    return this.bookAppointmentForm.get('patient_id');\n  }\n  get doctor_id() {\n    return this.bookAppointmentForm.get('doctor_id');\n  }\n  get appointment_date() {\n    return this.bookAppointmentForm.get('appointment_date');\n  }\n  get payment() {\n    return this.bookAppointmentForm.get('payment');\n  }\n  bookAppointment() {\n    this.isLoading = true;\n    setTimeout(() => {\n      this.showPage();\n    }, 5000);\n    console.warn(this.bookAppointmentForm.value);\n    alert(\"Booked Appointment Successfully\");\n  }\n  showPage() {\n    this.isLoading = false;\n  }\n}\nBookAppointmentComponent.ɵfac = function BookAppointmentComponent_Factory(t) {\n  return new (t || BookAppointmentComponent)(i0.ɵɵdirectiveInject(i1.Router));\n};\nBookAppointmentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BookAppointmentComponent,\n  selectors: [[\"app-book-appointment\"]],\n  decls: 35,\n  vars: 7,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col\"], [1, \"card\", \"mb-3\", 2, \"border\", \"none\"], [\"src\", \"https://quotefancy.com/media/wallpaper/3840x2160/4760789-Hippocrates-Quote-Health-is-the-greatest-of-human-blessings.jpg\", \"alt\", \"...\", 1, \"card-img-top\", \"img-class\"], [1, \"card-header\", \"text-bg-warning\", \"card-header-div\"], [1, \"card-body\", \"card-body-div\", \"text-bg-danger\"], [1, \"form_div\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-floating\", \"mb-3\"], [\"type\", \"number\", \"id\", \"patient_id\", \"formControlName\", \"patient_id\", 1, \"form-control\"], [\"for\", \"patient_id\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"type\", \"number\", \"id\", \"doctor_id\", \"formControlName\", \"doctor_id\", 1, \"form-control\"], [\"for\", \"doctor_id\"], [\"type\", \"date\", \"id\", \"appointment_date\", \"formControlName\", \"appointment_date\", 1, \"form-control\"], [\"for\", \"appointment_date\"], [\"type\", \"number\", \"id\", \"payment\", \"formControlName\", \"payment\", 1, \"form-control\"], [\"for\", \"payment\"], [\"type\", \"reset\", 1, \"btn\", \"btn-outline-warning\", \"clearbtn\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-success\", \"submitbtn\", 3, \"disabled\"], [\"id\", \"spin\", \"class\", \"spinner-border text-success spinner_div\", \"role\", \"status\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"], [\"id\", \"spin\", \"role\", \"status\", 1, \"spinner-border\", \"text-success\", \"spinner_div\"], [1, \"visually-hidden\"]],\n  template: function BookAppointmentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵelement(4, \"img\", 4);\n      i0.ɵɵelementStart(5, \"div\", 5);\n      i0.ɵɵtext(6, \"Book Appointment\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 6)(8, \"div\", 7)(9, \"form\", 8);\n      i0.ɵɵlistener(\"ngSubmit\", function BookAppointmentComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.bookAppointment();\n      });\n      i0.ɵɵelementStart(10, \"div\", 9);\n      i0.ɵɵelement(11, \"input\", 10);\n      i0.ɵɵelementStart(12, \"label\", 11);\n      i0.ɵɵtext(13, \"Patient's Id\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(14, BookAppointmentComponent_div_14_Template, 2, 1, \"div\", 12);\n      i0.ɵɵelementStart(15, \"div\", 9);\n      i0.ɵɵelement(16, \"input\", 13);\n      i0.ɵɵelementStart(17, \"label\", 14);\n      i0.ɵɵtext(18, \"Doctor's Id\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(19, BookAppointmentComponent_div_19_Template, 2, 1, \"div\", 12);\n      i0.ɵɵelementStart(20, \"div\", 9);\n      i0.ɵɵelement(21, \"input\", 15);\n      i0.ɵɵelementStart(22, \"label\", 16);\n      i0.ɵɵtext(23, \"Appointment Date\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(24, BookAppointmentComponent_div_24_Template, 2, 1, \"div\", 12);\n      i0.ɵɵelementStart(25, \"div\", 9);\n      i0.ɵɵelement(26, \"input\", 17);\n      i0.ɵɵelementStart(27, \"label\", 18);\n      i0.ɵɵtext(28, \"Payment\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(29, BookAppointmentComponent_div_29_Template, 2, 1, \"div\", 12);\n      i0.ɵɵelementStart(30, \"button\", 19);\n      i0.ɵɵtext(31, \"Clear\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"button\", 20);\n      i0.ɵɵtext(33, \"Book Appointment\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(34, BookAppointmentComponent_div_34_Template, 3, 0, \"div\", 21);\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.bookAppointmentForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.patient_id && ctx.patient_id.invalid && ctx.patient_id.touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.doctor_id && ctx.doctor_id.invalid && ctx.doctor_id.touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.appointment_date && ctx.appointment_date.invalid && ctx.appointment_date.touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.payment && ctx.payment.invalid && ctx.payment.touched);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", ctx.bookAppointmentForm.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\".card-body-div[_ngcontent-%COMP%]{\\r\\n    margin-left: 53.6%;\\r\\n    width: 37.9rem;\\r\\n    height: 49rem;\\r\\n}\\r\\n.img-class[_ngcontent-%COMP%]{\\r\\n    width: 35.9%;\\r\\n    height: 20rem;\\r\\n    margin-left: 55.8rem;\\r\\n}\\r\\n.card-header-div[_ngcontent-%COMP%]{\\r\\n    width: 36%;\\r\\n    margin-left: 53.6%;\\r\\n    font-size: 2.6rem;\\r\\n    padding-left: 9.9rem;\\r\\n    font-style: oblique;\\r\\n    font-family: emoji;\\r\\n}\\r\\n.text-bg-warning[_ngcontent-%COMP%]{\\r\\n    color: #1A237E;;\\r\\n}\\r\\n.clearbtn[_ngcontent-%COMP%]{\\r\\n    width: 11rem;\\r\\n    height: 3rem;\\r\\n    margin-top: 6rem;\\r\\n    margin-left: 2rem;\\r\\n}\\r\\n.submitbtn[_ngcontent-%COMP%]{\\r\\n    margin-left: 9rem;\\r\\n    margin-top: 6rem;\\r\\n    height: 3rem;\\r\\n    width: 13rem;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYm9vay1hcHBvaW50bWVudC9ib29rLWFwcG9pbnRtZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsY0FBYztJQUNkLGFBQWE7QUFDakI7QUFDQTtJQUNJLFlBQVk7SUFDWixhQUFhO0lBQ2Isb0JBQW9CO0FBQ3hCO0FBQ0E7SUFDSSxVQUFVO0lBQ1Ysa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQixvQkFBb0I7SUFDcEIsbUJBQW1CO0lBQ25CLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksY0FBYztBQUNsQjtBQUNBO0lBQ0ksWUFBWTtJQUNaLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSxpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWixZQUFZO0FBQ2hCIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQtYm9keS1kaXZ7XHJcbiAgICBtYXJnaW4tbGVmdDogNTMuNiU7XHJcbiAgICB3aWR0aDogMzcuOXJlbTtcclxuICAgIGhlaWdodDogNDlyZW07XHJcbn1cclxuLmltZy1jbGFzc3tcclxuICAgIHdpZHRoOiAzNS45JTtcclxuICAgIGhlaWdodDogMjByZW07XHJcbiAgICBtYXJnaW4tbGVmdDogNTUuOHJlbTtcclxufVxyXG4uY2FyZC1oZWFkZXItZGl2e1xyXG4gICAgd2lkdGg6IDM2JTtcclxuICAgIG1hcmdpbi1sZWZ0OiA1My42JTtcclxuICAgIGZvbnQtc2l6ZTogMi42cmVtO1xyXG4gICAgcGFkZGluZy1sZWZ0OiA5LjlyZW07XHJcbiAgICBmb250LXN0eWxlOiBvYmxpcXVlO1xyXG4gICAgZm9udC1mYW1pbHk6IGVtb2ppO1xyXG59XHJcbi50ZXh0LWJnLXdhcm5pbmd7XHJcbiAgICBjb2xvcjogIzFBMjM3RTs7XHJcbn1cclxuLmNsZWFyYnRue1xyXG4gICAgd2lkdGg6IDExcmVtO1xyXG4gICAgaGVpZ2h0OiAzcmVtO1xyXG4gICAgbWFyZ2luLXRvcDogNnJlbTtcclxuICAgIG1hcmdpbi1sZWZ0OiAycmVtO1xyXG59XHJcbi5zdWJtaXRidG57XHJcbiAgICBtYXJnaW4tbGVmdDogOXJlbTtcclxuICAgIG1hcmdpbi10b3A6IDZyZW07XHJcbiAgICBoZWlnaHQ6IDNyZW07XHJcbiAgICB3aWR0aDogMTNyZW07XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","BookAppointmentComponent","constructor","router","patient_id","required","doctor_id","appointment_date","payment","bookAppointmentForm","get","bookAppointment","isLoading","setTimeout","showPage","console","warn","value","alert","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["G:\\P1\\E_HealthCare_Management_System\\src\\app\\book-appointment\\book-appointment.component.ts","G:\\P1\\E_HealthCare_Management_System\\src\\app\\book-appointment\\book-appointment.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-book-appointment',\n  templateUrl: './book-appointment.component.html',\n  styleUrls: ['./book-appointment.component.css']\n})\nexport class BookAppointmentComponent {\n  isLoading:boolean | undefined;\n  bookAppointmentForm=new FormGroup({\n    patient_id:new FormControl('',[Validators.required]),\n    doctor_id:new FormControl('',[Validators.required]),\n    appointment_date:new FormControl('',[Validators.required]),\n    payment: new FormControl('',Validators.required)\n  })\n  constructor(private router:Router){\n    \n  }\n  get patient_id(){\n    return this.bookAppointmentForm.get('patient_id');\n  }\n  get doctor_id(){\n    return this.bookAppointmentForm.get('doctor_id');\n  }\n  get appointment_date(){\n    return this.bookAppointmentForm.get('appointment_date');\n  }\n  get payment(){\n    return this.bookAppointmentForm.get('payment');\n  }\n  \n  bookAppointment(){\n    this.isLoading=true;\n    setTimeout(() => {\n      this.showPage()\n    }, 5000);\n    console.warn(this.bookAppointmentForm.value);\n    alert(\"Booked Appointment Successfully\");\n  }\n  showPage(){\n    this.isLoading=false;\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col\">\n            <div class=\"card mb-3\" style=\"border: none;\">\n                <img src=\"https://quotefancy.com/media/wallpaper/3840x2160/4760789-Hippocrates-Quote-Health-is-the-greatest-of-human-blessings.jpg\" class=\"card-img-top img-class\" alt=\"...\">\n                <div class=\"card-header text-bg-warning card-header-div\">Book Appointment</div>\n                <div class=\"card-body card-body-div text-bg-danger\">\n                    <!--<h5 class=\"card-title\">Card title</h5>\n                    <p class=\"card-text\">This is a wider card with supporting text below as a natural lead-in to\n                        additional content. This content is a little bit longer.</p>\n                    <p class=\"card-text\"><small class=\"text-body-secondary\">Last updated 3 mins ago</small></p>-->\n\n                    <div class=\"form_div\">\n                        <form [formGroup]=\"bookAppointmentForm\" (ngSubmit)=\"bookAppointment()\">\n                            <div class=\"form-floating mb-3\">\n                                <input type=\"number\" class=\"form-control\" id=\"patient_id\"\n                                    formControlName=\"patient_id\">\n                                <label for=\"patient_id\">Patient's Id</label>\n                            </div>\n                            <div class=\"alert alert-danger\"\n                                *ngIf=\"patient_id && patient_id.invalid && patient_id.touched\">\n                                <div *ngIf=\"patient_id.errors?.['required']\">\n                                    Patient Id is Required\n                                </div>\n                            </div>\n                            <div class=\"form-floating mb-3\">\n                                <input type=\"number\" class=\"form-control\" id=\"doctor_id\"\n                                    formControlName=\"doctor_id\">\n                                <label for=\"doctor_id\">Doctor's Id</label>\n                            </div>\n                            <div class=\"alert alert-danger\"\n                                *ngIf=\"doctor_id && doctor_id.invalid && doctor_id.touched\">\n                                <div *ngIf=\"doctor_id.errors?.['required']\">\n                                    Doctor Id is Required\n                                </div>\n                            </div>\n                            <div class=\"form-floating mb-3\">\n                                <input type=\"date\" class=\"form-control\" id=\"appointment_date\"\n                                    formControlName=\"appointment_date\">\n                                <label for=\"appointment_date\">Appointment Date</label>\n                            </div>\n                            <div class=\"alert alert-danger\"\n                                *ngIf=\"appointment_date && appointment_date.invalid && appointment_date.touched\">\n                                <div *ngIf=\"appointment_date.errors?.['required']\">\n                                    Appointment Date is Required\n                                </div>\n                            </div>\n                            <div class=\"form-floating mb-3\">\n                                <input type=\"number\" class=\"form-control\" id=\"payment\"\n                                    formControlName=\"payment\">\n                                <label for=\"payment\">Payment</label>\n                            </div>\n                            <div class=\"alert alert-danger\"\n                                *ngIf=\"payment && payment.invalid && payment.touched\">\n                                <div *ngIf=\"payment.errors?.['required']\">\n                                    Payment Field is Required\n                                </div>\n                            </div>\n                            <button type=\"reset\" class=\"btn btn-outline-warning clearbtn\">Clear</button>\n                                <button  type=\"submit\" class=\"btn btn-outline-success submitbtn\" [disabled]=\"bookAppointmentForm.invalid\">Book Appointment</button>\n                                <div id=\"spin\" class=\"spinner-border text-success spinner_div\" role=\"status\"\n                                *ngIf=\"isLoading;\">\n                                <span class=\"visually-hidden\">Loading...</span>\n                            </div>\n                        </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}