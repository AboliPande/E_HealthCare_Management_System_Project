{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet UpdateDoctorComponent = class UpdateDoctorComponent {\n  constructor() {\n    this.updateDoctorForm = new FormGroup({\n      doctor_id: new FormControl('', [Validators.required]),\n      doctor_name: new FormControl('', [Validators.required, Validators.pattern('^[A-Za-z ]*$')]),\n      gender: new FormControl('', [Validators.required]),\n      specialist: new FormControl('', [Validators.required]),\n      address: new FormControl('', [Validators.required]),\n      contact_no: new FormControl('', [Validators.required, Validators.pattern('^[0-9]*$'), Validators.minLength(10), Validators.maxLength(10)]),\n      email_id: new FormControl('', [Validators.required, Validators.pattern('[a-z0-9]+@[a-z]+\\.com$')]),\n      username: new FormControl('', [Validators.required, Validators.pattern('[^ ]*$')]),\n      password: new FormControl('', [Validators.required, Validators.pattern(\"(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*_]).{8,}\")])\n    });\n  }\n  get doctor_id() {\n    return this.updateDoctorForm.get('doctor_id');\n  }\n  get doctor_name() {\n    return this.updateDoctorForm.get('doctor_name');\n  }\n  get Gender() {\n    return this.updateDoctorForm.get('gender');\n  }\n  get Specialist() {\n    return this.updateDoctorForm.get('specialist');\n  }\n  get Address() {\n    return this.updateDoctorForm.get('address');\n  }\n  get Contact_No() {\n    return this.updateDoctorForm.get('contact_no');\n  }\n  get Email_id() {\n    return this.updateDoctorForm.get('email_id');\n  }\n  get Username() {\n    return this.updateDoctorForm.get('username');\n  }\n  get Password() {\n    return this.updateDoctorForm.get('password');\n  }\n  updateDoctor() {\n    this.isLoading = true;\n    setTimeout(() => {\n      this.showPage();\n    }, 5000);\n    console.warn(this.updateDoctorForm.value);\n    alert(\"Updated Doctor Successfully\");\n  }\n  showPage() {\n    this.isLoading = false;\n  }\n};\nUpdateDoctorComponent = __decorate([Component({\n  selector: 'app-update-doctor',\n  templateUrl: './update-doctor.component.html',\n  styleUrls: ['./update-doctor.component.css']\n})], UpdateDoctorComponent);\nexport { UpdateDoctorComponent };","map":{"version":3,"mappings":"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","names":["Component","FormControl","FormGroup","Validators","UpdateDoctorComponent","constructor","doctor_id","required","doctor_name","pattern","gender","specialist","address","contact_no","minLength","maxLength","email_id","username","password","updateDoctorForm","get","Gender","Specialist","Address","Contact_No","Email_id","Username","Password","updateDoctor","isLoading","setTimeout","showPage","console","warn","value","alert","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["G:\\P1\\E_HealthCare_Management_System\\src\\app\\update-doctor\\update-doctor.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-update-doctor',\n  templateUrl: './update-doctor.component.html',\n  styleUrls: ['./update-doctor.component.css']\n})\nexport class UpdateDoctorComponent {\n  isLoading:boolean | undefined;\n  updateDoctorForm=new FormGroup({\n    doctor_id:new FormControl('',[Validators.required]),\n    doctor_name:new FormControl('',[Validators.required,Validators.pattern('^[A-Za-z ]*$')]),\n    gender:new FormControl('',[Validators.required]),\n    specialist:new FormControl('',[Validators.required]),\n    address:new FormControl('',[Validators.required]),\n    contact_no:new FormControl('',[Validators.required,Validators.pattern('^[0-9]*$'),Validators.minLength(10),Validators.maxLength(10)]),\n    email_id:new FormControl('',[Validators.required,Validators.pattern('[a-z0-9]+@[a-z]+\\.com$')]),\n    username:new FormControl('',[Validators.required,Validators.pattern('[^ ]*$')]),\n    password:new FormControl('',[Validators.required,Validators.pattern(\"(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*_]).{8,}\")])\n  });\n  get doctor_id(){\n    return this.updateDoctorForm.get('doctor_id');\n  }\n  get doctor_name(){\n    return this.updateDoctorForm.get('doctor_name');\n  }\n  get Gender(){\n    return this.updateDoctorForm.get('gender');\n  }\n  get Specialist(){\n    return this.updateDoctorForm.get('specialist');\n  }\n  get Address(){\n    return this.updateDoctorForm.get('address');\n  }\n  get Contact_No(){\n    return this.updateDoctorForm.get('contact_no');\n  }\n  get Email_id(){\n    return this.updateDoctorForm.get('email_id');\n  }\n  get Username(){\n    return this.updateDoctorForm.get('username');\n  }\n  get Password(){\n    return this.updateDoctorForm.get('password');\n  }\n  updateDoctor(){\n    this.isLoading=true;\n    setTimeout(() => {\n      this.showPage()\n    }, 5000);\n    console.warn(this.updateDoctorForm.value);\n    alert(\"Updated Doctor Successfully\");\n  }\n  showPage(){\n    this.isLoading=false;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}