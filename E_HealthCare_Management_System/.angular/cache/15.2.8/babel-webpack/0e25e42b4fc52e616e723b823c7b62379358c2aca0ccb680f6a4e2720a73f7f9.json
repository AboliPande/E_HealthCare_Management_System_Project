{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nexport class ChangePasswordComponent {\n  constructor(el) {\n    this.el = el;\n    this.changePasswordForm = new FormGroup({\n      patient_id: new FormControl('', [Validators.required]),\n      change_old_password: new FormControl('', [Validators.required, Validators.pattern('(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*_]).{8,}')]),\n      confirm_new_password: new FormControl('', [Validators.required, Validators.pattern('(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*_]).{8,}')])\n    });\n  }\n  get patient_id() {\n    return this.changePasswordForm.get('patient_id');\n  }\n  get change_old_password() {\n    return this.changePasswordForm.get('change_old_password');\n  }\n  get confirm_new_password() {\n    return this.changePasswordForm.get('confirm_new_password');\n  }\n  changePasswordFormSubmit() {\n    this.isLoading = true;\n    setTimeout(() => {\n      this.showPage();\n    }, 5000);\n    alert('Changed Password Successfully');\n    /*if(this.changePasswordForm.get('change_old_password')==this.changePasswordForm.get('confirm_new_password')){\r\n      alert(\"Changed Succesfully\");\r\n    }\r\n    else{\r\n      alert(\"Cannot Change\");\r\n      alert(\"Both the passwords are not matching\")\r\n    }*/\n  }\n\n  showPage() {\n    this.isLoading = false;\n    /* if(!this.isLoading){\r\n       this.router.navigate(['/admin/admin-header/']);\r\n     }*/\n  }\n}\n\nChangePasswordComponent.ɵfac = function ChangePasswordComponent_Factory(t) {\n  return new (t || ChangePasswordComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nChangePasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChangePasswordComponent,\n  selectors: [[\"app-change-password\"]],\n  decls: 0,\n  vars: 0,\n  template: function ChangePasswordComponent_Template(rf, ctx) {},\n  styles: [\".container-fluid[_ngcontent-%COMP%] {\\r\\n    margin: 0%;\\r\\n    padding: 0%;\\r\\n}\\r\\n\\r\\nimg[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n}\\r\\n.text-success[_ngcontent-%COMP%]{\\r\\n    background-color: rgb(255, 234, 0);\\r\\n}\\r\\n.card[_ngcontent-%COMP%]{\\r\\n    border: #f6ea05 3px solid;\\r\\n    border-radius: 10px;\\r\\n}\\r\\n.card-img-top[_ngcontent-%COMP%] {\\r\\n    height: 203px;\\r\\n}\\r\\n.spinner_div[_ngcontent-%COMP%]{\\r\\n    position: absolute;\\r\\n    top: 30rem;\\r\\n    left: 12rem;\\r\\n}\\r\\n.patient_id_div[_ngcontent-%COMP%] {\\r\\n    position: absolute;\\r\\n    top: 36%;\\r\\n    left: 15%;\\r\\n}\\r\\n.card-title[_ngcontent-%COMP%]{\\r\\n    color: #0d45eb;\\r\\n    font-size: x-large;\\r\\n    font-family: cursive;\\r\\n}\\r\\n.changeoldpassword_div[_ngcontent-%COMP%] {\\r\\n    position: absolute;\\r\\n    top: 27rem;\\r\\n    left: 61px;\\r\\n}\\r\\n\\r\\n.top_right[_ngcontent-%COMP%] {\\r\\n    position: absolute;\\r\\n    top: 141px;\\r\\n    left: 57rem;\\r\\n}\\r\\n\\r\\n.newpassword_div[_ngcontent-%COMP%] {\\r\\n    position: absolute;\\r\\n    text-align: center;\\r\\n    bottom: 18rem;\\r\\n    left: 4rem;\\r\\n}\\r\\n.clearbtn[_ngcontent-%COMP%]{\\r\\n    position: absolute;\\r\\n    top: 42rem;\\r\\n    left: 67px;\\r\\n    width: 133px;\\r\\n    color: #f7f8fb;\\r\\n    font-size: large;\\r\\n    font-weight: bolder;\\r\\n}\\r\\n.confirmbtn[_ngcontent-%COMP%]{\\r\\n    position: absolute;\\r\\n    top: 41.9rem;\\r\\n    left: 16rem;\\r\\n    width: 133px;\\r\\n    color: #f7f8fb;\\r\\n    font-size: large;\\r\\n    font-weight: bolder;\\r\\n}\\r\\n\\r\\n.alert-danger[_ngcontent-%COMP%]{\\r\\n    --bs-alert-bg:#dd8c93;\\r\\n}\\r\\n.form-control[_ngcontent-%COMP%]{\\r\\n    padding-right: 100px;\\r\\n}\\r\\n\\r\\n.form-check[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{\\r\\n    color: rgb(239, 200, 238);\\r\\n    font-style: italic;\\r\\n    font-weight: bolder;\\r\\n    font-size: larger;\\r\\n    margin-left: 8px;\\r\\n}\\r\\n.form-check-input[_ngcontent-%COMP%]:checked{\\r\\n    background-color: #f60505;\\r\\n}\\r\\n\\r\\n.card-body[_ngcontent-%COMP%]{\\r\\n    background-color: #dbdbc2;\\r\\n}\\r\\n\\r\\n\\r\\n.input1.ng-invalid[_ngcontent-%COMP%]{\\r\\n    border-left: 10px solid red;    \\r\\n    }\\r\\n.input1.ng-valid[_ngcontent-%COMP%]{\\r\\n        border-left:10px solid green ;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2hhbmdlLXBhc3N3b3JkL2NoYW5nZS1wYXNzd29yZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtJQUNWLFdBQVc7QUFDZjs7QUFFQTtJQUNJLFdBQVc7QUFDZjtBQUNBO0lBQ0ksa0NBQWtDO0FBQ3RDO0FBQ0E7SUFDSSx5QkFBeUI7SUFDekIsbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSxhQUFhO0FBQ2pCO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLFdBQVc7QUFDZjtBQUNBO0lBQ0ksa0JBQWtCO0lBQ2xCLFFBQVE7SUFDUixTQUFTO0FBQ2I7QUFDQTtJQUNJLGNBQWM7SUFDZCxrQkFBa0I7SUFDbEIsb0JBQW9CO0FBQ3hCO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLFVBQVU7QUFDZDs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixVQUFVO0lBQ1YsV0FBVztBQUNmOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2IsVUFBVTtBQUNkO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLFVBQVU7SUFDVixZQUFZO0lBQ1osY0FBYztJQUNkLGdCQUFnQjtJQUNoQixtQkFBbUI7QUFDdkI7QUFDQTtJQUNJLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osV0FBVztJQUNYLFlBQVk7SUFDWixjQUFjO0lBQ2QsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtBQUN2QjtBQUNBOzs7O0VBSUU7QUFDRjtJQUNJLHFCQUFxQjtBQUN6QjtBQUNBO0lBQ0ksb0JBQW9CO0FBQ3hCO0FBQ0E7Ozs7Ozs7OztFQVNFO0FBQ0Y7SUFDSSx5QkFBeUI7SUFDekIsa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixpQkFBaUI7SUFDakIsZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSx5QkFBeUI7QUFDN0I7QUFDQTs7Ozs7O0VBTUU7QUFDRjtJQUNJLHlCQUF5QjtBQUM3QjtBQUNBOzs7Ozs7OztFQVFFOztBQUVGO0lBQ0ksMkJBQTJCO0lBQzNCO0FBQ0o7UUFDUSw2QkFBNkI7QUFDckMiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyLWZsdWlkIHtcclxuICAgIG1hcmdpbjogMCU7XHJcbiAgICBwYWRkaW5nOiAwJTtcclxufVxyXG5cclxuaW1nIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcbi50ZXh0LXN1Y2Nlc3N7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjU1LCAyMzQsIDApO1xyXG59XHJcbi5jYXJke1xyXG4gICAgYm9yZGVyOiAjZjZlYTA1IDNweCBzb2xpZDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbn1cclxuLmNhcmQtaW1nLXRvcCB7XHJcbiAgICBoZWlnaHQ6IDIwM3B4O1xyXG59XHJcbi5zcGlubmVyX2RpdntcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMzByZW07XHJcbiAgICBsZWZ0OiAxMnJlbTtcclxufVxyXG4ucGF0aWVudF9pZF9kaXYge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAzNiU7XHJcbiAgICBsZWZ0OiAxNSU7XHJcbn1cclxuLmNhcmQtdGl0bGV7XHJcbiAgICBjb2xvcjogIzBkNDVlYjtcclxuICAgIGZvbnQtc2l6ZTogeC1sYXJnZTtcclxuICAgIGZvbnQtZmFtaWx5OiBjdXJzaXZlO1xyXG59XHJcbi5jaGFuZ2VvbGRwYXNzd29yZF9kaXYge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAyN3JlbTtcclxuICAgIGxlZnQ6IDYxcHg7XHJcbn1cclxuXHJcbi50b3BfcmlnaHQge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAxNDFweDtcclxuICAgIGxlZnQ6IDU3cmVtO1xyXG59XHJcblxyXG4ubmV3cGFzc3dvcmRfZGl2IHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGJvdHRvbTogMThyZW07XHJcbiAgICBsZWZ0OiA0cmVtO1xyXG59XHJcbi5jbGVhcmJ0bntcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNDJyZW07XHJcbiAgICBsZWZ0OiA2N3B4O1xyXG4gICAgd2lkdGg6IDEzM3B4O1xyXG4gICAgY29sb3I6ICNmN2Y4ZmI7XHJcbiAgICBmb250LXNpemU6IGxhcmdlO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcclxufVxyXG4uY29uZmlybWJ0bntcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNDEuOXJlbTtcclxuICAgIGxlZnQ6IDE2cmVtO1xyXG4gICAgd2lkdGg6IDEzM3B4O1xyXG4gICAgY29sb3I6ICNmN2Y4ZmI7XHJcbiAgICBmb250LXNpemU6IGxhcmdlO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcclxufVxyXG4vKi5hZG1pbl9kaXYge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAyMTZweDtcclxuICAgIGxlZnQ6IDE1MXB4O1xyXG59Ki9cclxuLmFsZXJ0LWRhbmdlcntcclxuICAgIC0tYnMtYWxlcnQtYmc6I2RkOGM5MztcclxufVxyXG4uZm9ybS1jb250cm9se1xyXG4gICAgcGFkZGluZy1yaWdodDogMTAwcHg7XHJcbn1cclxuLyouZG9jdG9yX2RpdiB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDI2OXB4O1xyXG4gICAgbGVmdDogMTUwcHg7XHJcbn1cclxuLnBhdGllbnRfZGl2e1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAzMjJweDtcclxuICAgIGxlZnQ6IDE1MHB4O1xyXG59Ki9cclxuLmZvcm0tY2hlY2sgbGFiZWx7XHJcbiAgICBjb2xvcjogcmdiKDIzOSwgMjAwLCAyMzgpO1xyXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcclxuICAgIGZvbnQtc2l6ZTogbGFyZ2VyO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDhweDtcclxufVxyXG4uZm9ybS1jaGVjay1pbnB1dDpjaGVja2Vke1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y2MDUwNTtcclxufVxyXG4vKi5uby1hY2NvdW50LWhlYWRlcntcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNDQ5cHg7XHJcbiAgICBsZWZ0OiAxMDRweDtcclxuICAgIGNvbG9yOiBhbGljZWJsdWU7XHJcbiAgICBmb250LXNpemU6IGxhcmdlcjtcclxufSovXHJcbi5jYXJkLWJvZHl7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGJkYmMyO1xyXG59XHJcbi8qLnNpZ251cGJ0bntcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNTAwcHg7XHJcbiAgICBsZWZ0OiAxNDBweDtcclxuICAgIHdpZHRoOiAxMzNweDtcclxuICAgIGNvbG9yOiAjZjdmOGZiO1xyXG4gICAgZm9udC1zaXplOiBsYXJnZTtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkZXI7XHJcbn0qL1xyXG5cclxuLmlucHV0MS5uZy1pbnZhbGlke1xyXG4gICAgYm9yZGVyLWxlZnQ6IDEwcHggc29saWQgcmVkOyAgICBcclxuICAgIH1cclxuLmlucHV0MS5uZy12YWxpZHtcclxuICAgICAgICBib3JkZXItbGVmdDoxMHB4IHNvbGlkIGdyZWVuIDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;AAOnE,OAAM,MAAOC,uBAAuB;EAgBlCC,YAAoBC,EAAa;IAAb,OAAE,GAAFA,EAAE;IAdtB,uBAAkB,GAAG,IAAIJ,SAAS,CAAC;MACjCK,UAAU,EAAC,IAAIN,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACK,QAAQ,CAAC,CAAC;MACpDC,mBAAmB,EAAC,IAAIR,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACK,QAAQ,EAACL,UAAU,CAACO,OAAO,CAAC,yDAAyD,CAAC,CAAC,CAAC;MAC3IC,oBAAoB,EAAC,IAAIV,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACK,QAAQ,EAACL,UAAU,CAACO,OAAO,CAAC,yDAAyD,CAAC,CAAC;KAC5I,CAAC;EAUmC;EATrC,IAAIH,UAAU;IACZ,OAAO,IAAI,CAACK,kBAAkB,CAACC,GAAG,CAAC,YAAY,CAAC;EAClD;EACA,IAAIJ,mBAAmB;IACrB,OAAO,IAAI,CAACG,kBAAkB,CAACC,GAAG,CAAC,qBAAqB,CAAC;EAC3D;EACA,IAAIF,oBAAoB;IACtB,OAAO,IAAI,CAACC,kBAAkB,CAACC,GAAG,CAAC,sBAAsB,CAAC;EAC5D;EAEAC,wBAAwB;IACtB,IAAI,CAACC,SAAS,GAAC,IAAI;IACnBC,UAAU,CAAC,MAAK;MACd,IAAI,CAACC,QAAQ,EAAE;IACjB,CAAC,EAAE,IAAI,CAAC;IACRC,KAAK,CAAC,+BAA+B,CAAC;IACtC;;;;;;;EAOF;;EACAD,QAAQ;IACN,IAAI,CAACF,SAAS,GAAC,KAAK;IACrB;;;EAGD;;;AApCWX,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;AAAA","names":["FormControl","FormGroup","Validators","ChangePasswordComponent","constructor","el","patient_id","required","change_old_password","pattern","confirm_new_password","changePasswordForm","get","changePasswordFormSubmit","isLoading","setTimeout","showPage","alert","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["G:\\P1\\E_HealthCare_Management_System\\src\\app\\change-password\\change-password.component.ts"],"sourcesContent":["import { Component, ElementRef, HostListener, Input } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent {\n  isLoading:boolean | undefined;\n  changePasswordForm = new FormGroup({\n    patient_id:new FormControl('',[Validators.required]),\n    change_old_password:new FormControl('',[Validators.required,Validators.pattern('(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*_]).{8,}')]),\n    confirm_new_password:new FormControl('',[Validators.required,Validators.pattern('(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*_]).{8,}')])\n  });\n  get patient_id(){\n    return this.changePasswordForm.get('patient_id');\n  }\n  get change_old_password(){\n    return this.changePasswordForm.get('change_old_password');\n  }\n  get confirm_new_password(){\n    return this.changePasswordForm.get('confirm_new_password');\n  }\n  constructor(private el:ElementRef) { }\n  changePasswordFormSubmit(){\n    this.isLoading=true;\n    setTimeout(() => {\n      this.showPage()\n    }, 5000);\n    alert('Changed Password Successfully');\n    /*if(this.changePasswordForm.get('change_old_password')==this.changePasswordForm.get('confirm_new_password')){\n      alert(\"Changed Succesfully\");\n    }\n    else{\n      alert(\"Cannot Change\");\n      alert(\"Both the passwords are not matching\")\n    }*/\n  }\n  showPage(){\n    this.isLoading=false;\n   /* if(!this.isLoading){\n      this.router.navigate(['/admin/admin-header/']);\n    }*/\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}