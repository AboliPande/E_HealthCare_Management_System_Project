{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { PatientClassComponent } from '../patient-class/patient-class.component';\nlet AddNewPatientComponent = class AddNewPatientComponent {\n  //doctor: DoctorComponent = new DoctorComponent();\n  constructor(serv, router) {\n    this.serv = serv;\n    this.router = router;\n    this.patient = new PatientClassComponent();\n    this.addPatientForm = new FormGroup({\n      patient_id: new FormControl('', [Validators.required]),\n      patient_name: new FormControl('', [Validators.required, Validators.pattern('^[A-Za-z ]*$')]),\n      gender: new FormControl('', [Validators.required]),\n      address: new FormControl('', [Validators.required]),\n      contact_no: new FormControl('', [Validators.required, Validators.minLength(10), Validators.maxLength(10)]),\n      doctor_id: new FormControl('', [Validators.required]),\n      app_date: new FormControl('', [Validators.required]),\n      payment: new FormControl('', [Validators.required]),\n      email_id: new FormControl('', [Validators.required, Validators.pattern('[a-z0-9]+@[a-z]+\\.com$')]),\n      //username:new FormControl('',[Validators.required,Validators.pattern('[^ ]*$')]),\n      password: new FormControl('', [Validators.required, Validators.pattern(\"(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*_]).{8,}\")])\n    });\n  }\n  ngOnInit() {\n    this.getDoctors();\n  }\n  getDoctors() {\n    this.serv.getAllDoctors().subscribe(data => {\n      this.doctors = data;\n    });\n  }\n  get patient_id() {\n    return this.addPatientForm.get('patient_id');\n  }\n  get patient_name() {\n    return this.addPatientForm.get('patient_name');\n  }\n  get app_date() {\n    return this.addPatientForm.get('app_date');\n  }\n  get payment() {\n    return this.addPatientForm.get('payment');\n  }\n  get Gender() {\n    return this.addPatientForm.get('gender');\n  }\n  /*get Dob(){\r\n    return this.addPatientForm.get('dob');\r\n  }*/\n  get Address() {\n    return this.addPatientForm.get('address');\n  }\n  get Contact_No() {\n    return this.addPatientForm.get('contact_no');\n  }\n  get Email_id() {\n    return this.addPatientForm.get('email_id');\n  }\n  /*get Username(){\r\n    return this.addPatientForm.get('username');\r\n  }*/\n  get doctor_id() {\n    return this.addPatientForm.get('doctor_id');\n  }\n  get Password() {\n    return this.addPatientForm.get('password');\n  }\n  addPatient() {\n    this.isLoading = true;\n    setTimeout(() => {\n      this.showPage();\n    }, 5000);\n    //console.warn(this.addPatientForm.value);\n    this.savePatient();\n    alert(\"Added Patient Successfully\");\n  }\n  savePatient() {\n    this.serv.createPatient(this.patient).subscribe(data => {\n      console.log(data);\n      this.gotoPatientsList();\n    }, error => console.log(error));\n  }\n  gotoPatientsList() {\n    this.router.navigate(['/admin/edit-view-all-patient']);\n  }\n  showPage() {\n    this.isLoading = false;\n  }\n};\nAddNewPatientComponent = __decorate([Component({\n  selector: 'app-add-new-patient',\n  templateUrl: './add-new-patient.component.html',\n  styleUrls: ['./add-new-patient.component.css']\n})], AddNewPatientComponent);\nexport { AddNewPatientComponent };","map":{"version":3,"mappings":"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","names":["Component","FormControl","FormGroup","Validators","PatientClassComponent","AddNewPatientComponent","constructor","serv","router","patient_id","required","patient_name","pattern","gender","address","contact_no","minLength","maxLength","doctor_id","app_date","payment","email_id","password","ngOnInit","getDoctors","getAllDoctors","subscribe","data","doctors","addPatientForm","get","Gender","Address","Contact_No","Email_id","Password","addPatient","isLoading","setTimeout","showPage","savePatient","alert","createPatient","patient","console","log","gotoPatientsList","error","navigate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["G:\\P1\\E_HealthCare_Management_System\\src\\app\\add-new-patient\\add-new-patient.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { PatientClassComponent } from '../patient-class/patient-class.component';\nimport { MyServiceService } from '../my-service.service';\nimport { Router } from '@angular/router';\nimport { DoctorComponent } from '../doctor/doctor.component';\n\n@Component({\n  selector: 'app-add-new-patient',\n  templateUrl: './add-new-patient.component.html',\n  styleUrls: ['./add-new-patient.component.css']\n})\nexport class AddNewPatientComponent {\n  isLoading:boolean | undefined;\n\n  patient: PatientClassComponent = new PatientClassComponent();\n  doctors: DoctorComponent[] | undefined;\n\n  ngOnInit(){\n    this.getDoctors();\n  }\n\n  private getDoctors(){\n    this.serv.getAllDoctors().subscribe(data => {\n      this.doctors = data;\n    });\n  }\n  //doctor: DoctorComponent = new DoctorComponent();\n  constructor(private serv: MyServiceService,private router: Router) { }\n\n  addPatientForm=new FormGroup({\n    patient_id:new FormControl('',[Validators.required]),\n    patient_name:new FormControl('',[Validators.required,Validators.pattern('^[A-Za-z ]*$')]),\n    gender:new FormControl('',[Validators.required]),\n    address:new FormControl('',[Validators.required]),\n    contact_no:new FormControl('',[Validators.required,Validators.minLength(10),Validators.maxLength(10)]),\n    doctor_id:new FormControl('',[Validators.required]),\n    app_date:new FormControl('',[Validators.required]),\n    payment:new FormControl('',[Validators.required]),\n    email_id:new FormControl('',[Validators.required,Validators.pattern('[a-z0-9]+@[a-z]+\\.com$')]),\n    //username:new FormControl('',[Validators.required,Validators.pattern('[^ ]*$')]),\n    password:new FormControl('',[Validators.required,Validators.pattern(\"(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*_]).{8,}\")])\n  });\n\n\n  get patient_id(){\n    return this.addPatientForm.get('patient_id');\n  }\n  get patient_name(){\n    return this.addPatientForm.get('patient_name');\n  }\n\n  get app_date(){\n    return this.addPatientForm.get('app_date');\n  }\n  get payment(){\n    return this.addPatientForm.get('payment');\n  }\n  get Gender(){\n    return this.addPatientForm.get('gender');\n  }\n  /*get Dob(){\n    return this.addPatientForm.get('dob');\n  }*/\n  get Address(){\n    return this.addPatientForm.get('address');\n  }\n  get Contact_No(){\n    return this.addPatientForm.get('contact_no');\n  }\n  get Email_id(){\n    return this.addPatientForm.get('email_id');\n  }\n  /*get Username(){\n    return this.addPatientForm.get('username');\n  }*/\n  get doctor_id(){\n    return this.addPatientForm.get('doctor_id');\n  }\n\n  get Password(){\n    return this.addPatientForm.get('password');\n  }\n  addPatient(){\n    this.isLoading=true;\n    setTimeout(() => {\n      this.showPage()\n    },5000);\n    //console.warn(this.addPatientForm.value);\n    this.savePatient();\n    alert(\"Added Patient Successfully\");\n  }\n  savePatient(){\n    this.serv.createPatient(this.patient).subscribe( data =>{\n      console.log(data);\n      this.gotoPatientsList();\n    },\n    error => console.log(error));\n  }\n  gotoPatientsList() {\n    this.router.navigate(['/admin/edit-view-all-patient']);\n  }\n\n  showPage(){\n    this.isLoading=false;\n    }\n  }"]},"metadata":{},"sourceType":"module","externalDependencies":[]}