{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { PatientClassComponent } from '../patient-class/patient-class.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../my-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction AddNewPatientComponent_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Patient Id is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewPatientComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵtemplate(1, AddNewPatientComponent_div_15_div_1_Template, 2, 0, \"div\", 39);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.patient_id.errors == null ? null : ctx_r0.patient_id.errors[\"required\"]);\n  }\n}\nfunction AddNewPatientComponent_div_20_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Patient's Name is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewPatientComponent_div_20_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" It should not contain a digit and any special symbol \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewPatientComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵtemplate(1, AddNewPatientComponent_div_20_div_1_Template, 2, 0, \"div\", 39);\n    i0.ɵɵtemplate(2, AddNewPatientComponent_div_20_div_2_Template, 2, 0, \"div\", 39);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.patient_name.errors == null ? null : ctx_r1.patient_name.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.patient_name.errors == null ? null : ctx_r1.patient_name.errors[\"pattern\"]);\n  }\n}\nfunction AddNewPatientComponent_div_29_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Gender is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewPatientComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵtemplate(1, AddNewPatientComponent_div_29_div_1_Template, 2, 0, \"div\", 39);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.Gender.errors == null ? null : ctx_r2.Gender.errors[\"required\"]);\n  }\n}\nfunction AddNewPatientComponent_div_34_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Address is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewPatientComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵtemplate(1, AddNewPatientComponent_div_34_div_1_Template, 2, 0, \"div\", 39);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.Address.errors == null ? null : ctx_r3.Address.errors[\"required\"]);\n  }\n}\nfunction AddNewPatientComponent_div_39_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Contact No is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewPatientComponent_div_39_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" It should be a 10 digit number \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewPatientComponent_div_39_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Its not a valid number \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewPatientComponent_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵtemplate(1, AddNewPatientComponent_div_39_div_1_Template, 2, 0, \"div\", 39);\n    i0.ɵɵtemplate(2, AddNewPatientComponent_div_39_div_2_Template, 2, 0, \"div\", 39);\n    i0.ɵɵtemplate(3, AddNewPatientComponent_div_39_div_3_Template, 2, 0, \"div\", 39);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.Contact_No.errors == null ? null : ctx_r4.Contact_No.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.Contact_No.errors == null ? null : ctx_r4.Contact_No.errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.Contact_No.errors == null ? null : ctx_r4.Contact_No.errors[\"maxlength\"]);\n  }\n}\nfunction AddNewPatientComponent_select_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"select\", 40);\n    i0.ɵɵelement(1, \"option\", 41);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r5.doctors.doctor_id);\n  }\n}\nfunction AddNewPatientComponent_div_44_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Doctor Id is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewPatientComponent_div_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵtemplate(1, AddNewPatientComponent_div_44_div_1_Template, 2, 0, \"div\", 39);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.doctor_id.errors == null ? null : ctx_r6.doctor_id.errors[\"required\"]);\n  }\n}\nfunction AddNewPatientComponent_div_49_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Appointment Date is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewPatientComponent_div_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵtemplate(1, AddNewPatientComponent_div_49_div_1_Template, 2, 0, \"div\", 39);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.app_date.errors == null ? null : ctx_r7.app_date.errors[\"required\"]);\n  }\n}\nfunction AddNewPatientComponent_div_54_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Payment is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewPatientComponent_div_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵtemplate(1, AddNewPatientComponent_div_54_div_1_Template, 2, 0, \"div\", 39);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.payment.errors == null ? null : ctx_r8.payment.errors[\"required\"]);\n  }\n}\nfunction AddNewPatientComponent_div_59_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Email Id is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewPatientComponent_div_59_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Email Id is not in the correct format \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewPatientComponent_div_59_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵtemplate(1, AddNewPatientComponent_div_59_div_1_Template, 2, 0, \"div\", 39);\n    i0.ɵɵtemplate(2, AddNewPatientComponent_div_59_div_2_Template, 2, 0, \"div\", 39);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.Email_id.errors == null ? null : ctx_r9.Email_id.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.Email_id.errors == null ? null : ctx_r9.Email_id.errors[\"pattern\"]);\n  }\n}\nfunction AddNewPatientComponent_div_64_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewPatientComponent_div_64_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password is must be of atleast 8 characters long,must contain 1 uppercase,1 lowercase and a special symbol and a digit \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewPatientComponent_div_64_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵtemplate(1, AddNewPatientComponent_div_64_div_1_Template, 2, 0, \"div\", 39);\n    i0.ɵɵtemplate(2, AddNewPatientComponent_div_64_div_2_Template, 2, 0, \"div\", 39);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r10.Password.errors == null ? null : ctx_r10.Password.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r10.Password.errors == null ? null : ctx_r10.Password.errors[\"pattern\"]);\n  }\n}\nfunction AddNewPatientComponent_div_69_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 42)(1, \"span\", 43);\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class AddNewPatientComponent {\n  //doctor: DoctorComponent = new DoctorComponent();\n  constructor(serv, router) {\n    this.serv = serv;\n    this.router = router;\n    this.patient = new PatientClassComponent();\n    this.addPatientForm = new FormGroup({\n      patient_id: new FormControl('', [Validators.required]),\n      patient_name: new FormControl('', [Validators.required, Validators.pattern('^[A-Za-z ]*$')]),\n      gender: new FormControl('', [Validators.required]),\n      address: new FormControl('', [Validators.required]),\n      contact_no: new FormControl('', [Validators.required, Validators.minLength(10), Validators.maxLength(10)]),\n      doctor_id: new FormControl('', [Validators.required]),\n      app_date: new FormControl('', [Validators.required]),\n      payment: new FormControl('', [Validators.required]),\n      email_id: new FormControl('', [Validators.required, Validators.pattern('[a-z0-9]+@[a-z]+\\.com$')]),\n      //username:new FormControl('',[Validators.required,Validators.pattern('[^ ]*$')]),\n      password: new FormControl('', [Validators.required, Validators.pattern(\"(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*_]).{8,}\")])\n    });\n  }\n  ngOnInit() {\n    this.getDoctors();\n  }\n  getDoctors() {\n    this.serv.getAllDoctors().subscribe(data => {\n      this.doctors = data;\n    });\n  }\n  get patient_id() {\n    return this.addPatientForm.get('patient_id');\n  }\n  get patient_name() {\n    return this.addPatientForm.get('patient_name');\n  }\n  get app_date() {\n    return this.addPatientForm.get('app_date');\n  }\n  get payment() {\n    return this.addPatientForm.get('payment');\n  }\n  get Gender() {\n    return this.addPatientForm.get('gender');\n  }\n  /*get Dob(){\r\n    return this.addPatientForm.get('dob');\r\n  }*/\n  get Address() {\n    return this.addPatientForm.get('address');\n  }\n  get Contact_No() {\n    return this.addPatientForm.get('contact_no');\n  }\n  get Email_id() {\n    return this.addPatientForm.get('email_id');\n  }\n  /*get Username(){\r\n    return this.addPatientForm.get('username');\r\n  }*/\n  get doctor_id() {\n    return this.addPatientForm.get('doctor_id');\n  }\n  get Password() {\n    return this.addPatientForm.get('password');\n  }\n  addPatient() {\n    this.isLoading = true;\n    setTimeout(() => {\n      this.showPage();\n    }, 5000);\n    //console.warn(this.addPatientForm.value);\n    this.savePatient();\n    alert(\"Added Patient Successfully\");\n  }\n  savePatient() {\n    this.serv.createPatient(this.patient).subscribe(data => {\n      console.log(data);\n      this.gotoPatientsList();\n    }, error => console.log(error));\n  }\n  gotoPatientsList() {\n    this.router.navigate(['/admin/edit-view-all-patient']);\n  }\n  showPage() {\n    this.isLoading = false;\n  }\n}\nAddNewPatientComponent.ɵfac = function AddNewPatientComponent_Factory(t) {\n  return new (t || AddNewPatientComponent)(i0.ɵɵdirectiveInject(i1.MyServiceService), i0.ɵɵdirectiveInject(i2.Router));\n};\nAddNewPatientComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddNewPatientComponent,\n  selectors: [[\"app-add-new-patient\"]],\n  decls: 70,\n  vars: 23,\n  consts: [[1, \"container-fluid\", 2, \"padding\", \"0\"], [1, \"row\", \"align-items-center\", 2, \"margin\", \"0\", \"height\", \"68rem\"], [1, \"col-6\", \"col-sm-6\", \"col-md-6\", \"col-xl-6\", \"col-lg-6\", \"col-xxl-6\", 2, \"padding\", \"0\"], [\"src\", \"https://img.freepik.com/premium-photo/woman-caucasian-doctor-using-computer-check-patient-data-document_10541-5090.jpg?size=626&ext=jpg&ga=GA1.2.286798921.1690094042&semt=ais\", \"alt\", \"\", 2, \"height\", \"68rem\", \"width\", \"729px\", \"margin-left\", \"8px\"], [1, \"col-4\", \"col-sm-4\", \"col-md-4\", \"col-xl-4\", \"col-lg-4\", \"col-xxl-4\", 2, \"padding\", \"0\", \"margin-left\", \"9rem\", \"height\", \"51rem\"], [1, \"card\", \"card_div\", \"opacity-75\", 2, \"background-color\", \"#A8001F\"], [1, \"card-header\", \"text-center\"], [1, \"card-body\"], [1, \"form_div\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-floating\", \"mb-3\"], [\"type\", \"number\", \"id\", \"patient_id\", \"placeholder\", \"Example: 01\", \"formControlName\", \"patient_id\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"patient_id\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"type\", \"text\", \"id\", \"patient_name\", \"placeholder\", \"Example: Aboli Pande\", \"formControlName\", \"patient_name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"patient_name\"], [1, \"form-floating\"], [\"id\", \"gender\", \"aria-label\", \"Floating label select example\", \"formControlName\", \"gender\", 1, \"form-select\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"Male\"], [\"value\", \"Female\"], [\"for\", \"gender\"], [\"placeholder\", \"Your Address\", \"id\", \"address\", \"formControlName\", \"address\", 1, \"form-control\", 2, \"height\", \"100px\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"address\"], [\"type\", \"text\", \"id\", \"contact_no\", \"placeholder\", \"Your Phone No\", \"formControlName\", \"contact_no\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"contact_no\"], [\"name\", \"s1\", \"id\", \"\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"doctor_id\"], [\"type\", \"date\", \"id\", \"app_date\", \"placeholder\", \"Appointment Date\", \"formControlName\", \"app_date\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"app_date\"], [\"type\", \"number\", \"id\", \"payment\", \"placeholder\", \"Payment\", \"formControlName\", \"payment\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"payment\"], [\"type\", \"email\", \"id\", \"email_id\", \"placeholder\", \"name@example.com\", \"formControlName\", \"email_id\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email_id\"], [\"type\", \"password\", \"id\", \"txt_password\", \"placeholder\", \"Password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"txt_password\"], [\"type\", \"submit\", 1, \"btn\", \"submit_btn\", \"btn-outline-success\", 3, \"disabled\"], [\"type\", \"reset\", 1, \"btn\", \"btn-outline-warning\", \"clearbtn\"], [\"id\", \"spin\", \"class\", \"spinner-border text-success spinner_div\", \"role\", \"status\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"], [\"name\", \"s1\", \"id\", \"\"], [3, \"value\"], [\"id\", \"spin\", \"role\", \"status\", 1, \"spinner-border\", \"text-success\", \"spinner_div\"], [1, \"visually-hidden\"]],\n  template: function AddNewPatientComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"img\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6);\n      i0.ɵɵtext(7, \"Add New Patient\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 7)(9, \"div\", 8)(10, \"form\", 9);\n      i0.ɵɵlistener(\"ngSubmit\", function AddNewPatientComponent_Template_form_ngSubmit_10_listener() {\n        return ctx.addPatient();\n      });\n      i0.ɵɵelementStart(11, \"div\", 10)(12, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function AddNewPatientComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.patient.patient_id = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"label\", 12);\n      i0.ɵɵtext(14, \"Patient's Id\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(15, AddNewPatientComponent_div_15_Template, 2, 1, \"div\", 13);\n      i0.ɵɵelementStart(16, \"div\", 10)(17, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function AddNewPatientComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.patient.patient_name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"label\", 15);\n      i0.ɵɵtext(19, \"Patient's Name\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(20, AddNewPatientComponent_div_20_Template, 3, 2, \"div\", 13);\n      i0.ɵɵelementStart(21, \"div\", 16)(22, \"select\", 17);\n      i0.ɵɵlistener(\"ngModelChange\", function AddNewPatientComponent_Template_select_ngModelChange_22_listener($event) {\n        return ctx.patient.gender = $event;\n      });\n      i0.ɵɵelementStart(23, \"option\", 18);\n      i0.ɵɵtext(24, \"Male\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"option\", 19);\n      i0.ɵɵtext(26, \"Female\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"label\", 20);\n      i0.ɵɵtext(28, \"Gender\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(29, AddNewPatientComponent_div_29_Template, 2, 1, \"div\", 13);\n      i0.ɵɵelementStart(30, \"div\", 16)(31, \"textarea\", 21);\n      i0.ɵɵlistener(\"ngModelChange\", function AddNewPatientComponent_Template_textarea_ngModelChange_31_listener($event) {\n        return ctx.patient.address = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"label\", 22);\n      i0.ɵɵtext(33, \"Address\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(34, AddNewPatientComponent_div_34_Template, 2, 1, \"div\", 13);\n      i0.ɵɵelementStart(35, \"div\", 10)(36, \"input\", 23);\n      i0.ɵɵlistener(\"ngModelChange\", function AddNewPatientComponent_Template_input_ngModelChange_36_listener($event) {\n        return ctx.patient.contact_no = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"label\", 24);\n      i0.ɵɵtext(38, \"Contact No\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(39, AddNewPatientComponent_div_39_Template, 4, 3, \"div\", 13);\n      i0.ɵɵelementStart(40, \"div\", 10);\n      i0.ɵɵtemplate(41, AddNewPatientComponent_select_41_Template, 2, 1, \"select\", 25);\n      i0.ɵɵelementStart(42, \"label\", 26);\n      i0.ɵɵtext(43, \"Doctor's Id\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(44, AddNewPatientComponent_div_44_Template, 2, 1, \"div\", 13);\n      i0.ɵɵelementStart(45, \"div\", 10)(46, \"input\", 27);\n      i0.ɵɵlistener(\"ngModelChange\", function AddNewPatientComponent_Template_input_ngModelChange_46_listener($event) {\n        return ctx.patient.app_date = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"label\", 28);\n      i0.ɵɵtext(48, \"Appointment Date\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(49, AddNewPatientComponent_div_49_Template, 2, 1, \"div\", 13);\n      i0.ɵɵelementStart(50, \"div\", 10)(51, \"input\", 29);\n      i0.ɵɵlistener(\"ngModelChange\", function AddNewPatientComponent_Template_input_ngModelChange_51_listener($event) {\n        return ctx.patient.payment = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(52, \"label\", 30);\n      i0.ɵɵtext(53, \"Payment\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(54, AddNewPatientComponent_div_54_Template, 2, 1, \"div\", 13);\n      i0.ɵɵelementStart(55, \"div\", 10)(56, \"input\", 31);\n      i0.ɵɵlistener(\"ngModelChange\", function AddNewPatientComponent_Template_input_ngModelChange_56_listener($event) {\n        return ctx.patient.email_id = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(57, \"label\", 32);\n      i0.ɵɵtext(58, \"Email Id\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(59, AddNewPatientComponent_div_59_Template, 3, 2, \"div\", 13);\n      i0.ɵɵelementStart(60, \"div\", 16)(61, \"input\", 33);\n      i0.ɵɵlistener(\"ngModelChange\", function AddNewPatientComponent_Template_input_ngModelChange_61_listener($event) {\n        return ctx.patient.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(62, \"label\", 34);\n      i0.ɵɵtext(63, \"Password\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(64, AddNewPatientComponent_div_64_Template, 3, 2, \"div\", 13);\n      i0.ɵɵelementStart(65, \"button\", 35);\n      i0.ɵɵtext(66, \"Add Patient\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(67, \"button\", 36);\n      i0.ɵɵtext(68, \"Clear\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(69, AddNewPatientComponent_div_69_Template, 3, 0, \"div\", 37);\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.addPatientForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.patient.patient_id);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.patient_id && ctx.patient_id.invalid && ctx.patient_id.touched);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.patient.patient_name);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.patient_name && ctx.patient_name.invalid && ctx.patient_name.touched);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.patient.gender);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.Gender && ctx.Gender.invalid && ctx.Gender.touched);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.patient.address);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.Address && ctx.Address.invalid && ctx.Address.touched);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.patient.contact_no);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.Contact_No && ctx.Contact_No.touched && ctx.Contact_No.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.doctors);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.doctor_id && ctx.doctor_id.invalid && ctx.doctor_id.touched);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.patient.app_date);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.app_date && ctx.app_date.touched && ctx.app_date.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.patient.payment);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.payment && ctx.payment.invalid && ctx.payment.touched);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.patient.email_id);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.Email_id && ctx.Email_id.invalid && ctx.Email_id.touched);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.patient.password);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.Password && ctx.Password.touched && ctx.Password.invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.addPatientForm.invalid);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\".card_div[_ngcontent-%COMP%]{\\r\\n    width: 28rem;\\r\\n    height: 63rem;\\r\\n    \\r\\n    \\r\\n    font-size: 34px;\\r\\n    margin-left: 21px;\\r\\n    border-radius: 23px;\\r\\n    margin-top: -65px;\\r\\n}\\r\\n.col-xxl-4[_ngcontent-%COMP%]{\\r\\n    width: 39.333333%;\\r\\n    height: 63rem;\\r\\n}\\r\\n.submit_btn[_ngcontent-%COMP%]{\\r\\n    position: absolute;\\r\\n    color: #f7f8fb;\\r\\n    font-size: large;\\r\\n    font-weight: bolder;\\r\\n    width: 9rem;\\r\\n    height: 3rem;\\r\\n    left: 15rem;\\r\\n    bottom: 2rem;\\r\\n}\\r\\n.clearbtn[_ngcontent-%COMP%]{\\r\\n    position: absolute;\\r\\n    color: #f7f8fb;\\r\\n    font-size: large;\\r\\n    font-weight: bolder;\\r\\n    width: 9rem;\\r\\n    bottom: 2rem;\\r\\n    height: 3rem;\\r\\n    left: 3rem;\\r\\n}\\r\\n.spinner_div[_ngcontent-%COMP%]{\\r\\n    position: absolute;\\r\\n    top: 28rem;\\r\\n    left: 13rem;\\r\\n}\\r\\n\\r\\n.text-success[_ngcontent-%COMP%]{\\r\\n    background-color: rgb(255, 234, 0);\\r\\n}\\r\\n.form_div[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{\\r\\n    font-size: 16px;\\r\\n    color: black;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n.form_div[_ngcontent-%COMP%]{\\r\\n    margin-top: 6px;\\r\\n}\\r\\n.card-header[_ngcontent-%COMP%]{\\r\\n    font-family: 'bootstrap-icons';\\r\\n    color: white;\\r\\n    margin-top: 6px;\\r\\n}\\r\\n\\r\\ninput[_ngcontent-%COMP%]{\\r\\n    color: black;\\r\\n    font-weight: 500;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRkLW5ldy1wYXRpZW50L2FkZC1uZXctcGF0aWVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGFBQWE7SUFDYiwrQkFBK0I7SUFDL0Isc0JBQXNCO0lBQ3RCLGVBQWU7SUFDZixpQkFBaUI7SUFDakIsbUJBQW1CO0lBQ25CLGlCQUFpQjtBQUNyQjtBQUNBO0lBQ0ksaUJBQWlCO0lBQ2pCLGFBQWE7QUFDakI7QUFDQTtJQUNJLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQixXQUFXO0lBQ1gsWUFBWTtJQUNaLFdBQVc7SUFDWCxZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIsY0FBYztJQUNkLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsV0FBVztJQUNYLFlBQVk7SUFDWixZQUFZO0lBQ1osVUFBVTtBQUNkO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLFdBQVc7QUFDZjtBQUNBOztFQUVFO0FBQ0Y7SUFDSSxrQ0FBa0M7QUFDdEM7QUFDQTtJQUNJLGVBQWU7SUFDZixZQUFZO0lBQ1osbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSxlQUFlO0FBQ25CO0FBQ0E7SUFDSSw4QkFBOEI7SUFDOUIsWUFBWTtJQUNaLGVBQWU7QUFDbkI7QUFDQTs7Ozs7O0VBTUU7QUFDRjtJQUNJLFlBQVk7SUFDWixnQkFBZ0I7QUFDcEIiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZF9kaXZ7XHJcbiAgICB3aWR0aDogMjhyZW07XHJcbiAgICBoZWlnaHQ6IDYzcmVtO1xyXG4gICAgLyogYmFja2dyb3VuZC1jb2xvcjogIzRiMjYzMTsgKi9cclxuICAgIC8qIGNvbG9yOiBhbGljZWJsdWU7ICovXHJcbiAgICBmb250LXNpemU6IDM0cHg7XHJcbiAgICBtYXJnaW4tbGVmdDogMjFweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDIzcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAtNjVweDtcclxufVxyXG4uY29sLXh4bC00e1xyXG4gICAgd2lkdGg6IDM5LjMzMzMzMyU7XHJcbiAgICBoZWlnaHQ6IDYzcmVtO1xyXG59XHJcbi5zdWJtaXRfYnRue1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgY29sb3I6ICNmN2Y4ZmI7XHJcbiAgICBmb250LXNpemU6IGxhcmdlO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcclxuICAgIHdpZHRoOiA5cmVtO1xyXG4gICAgaGVpZ2h0OiAzcmVtO1xyXG4gICAgbGVmdDogMTVyZW07XHJcbiAgICBib3R0b206IDJyZW07XHJcbn1cclxuLmNsZWFyYnRue1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgY29sb3I6ICNmN2Y4ZmI7XHJcbiAgICBmb250LXNpemU6IGxhcmdlO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcclxuICAgIHdpZHRoOiA5cmVtO1xyXG4gICAgYm90dG9tOiAycmVtO1xyXG4gICAgaGVpZ2h0OiAzcmVtO1xyXG4gICAgbGVmdDogM3JlbTtcclxufVxyXG4uc3Bpbm5lcl9kaXZ7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDI4cmVtO1xyXG4gICAgbGVmdDogMTNyZW07XHJcbn1cclxuLyoucm93IC5hbGlnbi1pdGVtcy1jZW50ZXJ7XHJcbiAgICBoZWlnaHQ6IDY2cmVtO1xyXG59Ki9cclxuLnRleHQtc3VjY2Vzc3tcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTUsIDIzNCwgMCk7XHJcbn1cclxuLmZvcm1fZGl2IGRpdntcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIGNvbG9yOiBibGFjaztcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn1cclxuLmZvcm1fZGl2e1xyXG4gICAgbWFyZ2luLXRvcDogNnB4O1xyXG59XHJcbi5jYXJkLWhlYWRlcntcclxuICAgIGZvbnQtZmFtaWx5OiAnYm9vdHN0cmFwLWljb25zJztcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIG1hcmdpbi10b3A6IDZweDtcclxufVxyXG4vKi5idG57XHJcbiAgICB3aWR0aDogMTUwcHg7XHJcbiAgICBoZWlnaHQ6IDQxcHg7XHJcbiAgICBtYXJnaW4tbGVmdDogMTM1cHg7XHJcbiAgICBtYXJnaW4tdG9wOiAyN3B4O1xyXG4gICAgY29sb3I6ICMxOGVlY2I7XHJcbn0qL1xyXG5pbnB1dHtcclxuICAgIGNvbG9yOiBibGFjaztcclxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","PatientClassComponent","i0","AddNewPatientComponent","constructor","serv","router","patient_id","required","patient_name","pattern","gender","address","contact_no","minLength","maxLength","doctor_id","app_date","payment","email_id","password","ngOnInit","getDoctors","getAllDoctors","subscribe","data","doctors","addPatientForm","get","Gender","Address","Contact_No","Email_id","Password","addPatient","isLoading","setTimeout","showPage","savePatient","alert","createPatient","patient","console","log","gotoPatientsList","error","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["G:\\P1\\E_HealthCare_Management_System\\src\\app\\add-new-patient\\add-new-patient.component.ts","G:\\P1\\E_HealthCare_Management_System\\src\\app\\add-new-patient\\add-new-patient.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { PatientClassComponent } from '../patient-class/patient-class.component';\nimport { MyServiceService } from '../my-service.service';\nimport { Router } from '@angular/router';\nimport { DoctorComponent } from '../doctor/doctor.component';\n\n@Component({\n  selector: 'app-add-new-patient',\n  templateUrl: './add-new-patient.component.html',\n  styleUrls: ['./add-new-patient.component.css']\n})\nexport class AddNewPatientComponent {\n  isLoading:boolean | undefined;\n\n  patient: PatientClassComponent = new PatientClassComponent();\n  doctors: DoctorComponent[] | undefined;\n\n  ngOnInit(){\n    this.getDoctors();\n  }\n\n  private getDoctors(){\n    this.serv.getAllDoctors().subscribe(data => {\n      this.doctors = data;\n    });\n  }\n  //doctor: DoctorComponent = new DoctorComponent();\n  constructor(private serv: MyServiceService,private router: Router) { }\n\n  addPatientForm=new FormGroup({\n    patient_id:new FormControl('',[Validators.required]),\n    patient_name:new FormControl('',[Validators.required,Validators.pattern('^[A-Za-z ]*$')]),\n    gender:new FormControl('',[Validators.required]),\n    address:new FormControl('',[Validators.required]),\n    contact_no:new FormControl('',[Validators.required,Validators.minLength(10),Validators.maxLength(10)]),\n    doctor_id:new FormControl('',[Validators.required]),\n    app_date:new FormControl('',[Validators.required]),\n    payment:new FormControl('',[Validators.required]),\n    email_id:new FormControl('',[Validators.required,Validators.pattern('[a-z0-9]+@[a-z]+\\.com$')]),\n    //username:new FormControl('',[Validators.required,Validators.pattern('[^ ]*$')]),\n    password:new FormControl('',[Validators.required,Validators.pattern(\"(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*_]).{8,}\")])\n  });\n\n\n  get patient_id(){\n    return this.addPatientForm.get('patient_id');\n  }\n  get patient_name(){\n    return this.addPatientForm.get('patient_name');\n  }\n\n  get app_date(){\n    return this.addPatientForm.get('app_date');\n  }\n  get payment(){\n    return this.addPatientForm.get('payment');\n  }\n  get Gender(){\n    return this.addPatientForm.get('gender');\n  }\n  /*get Dob(){\n    return this.addPatientForm.get('dob');\n  }*/\n  get Address(){\n    return this.addPatientForm.get('address');\n  }\n  get Contact_No(){\n    return this.addPatientForm.get('contact_no');\n  }\n  get Email_id(){\n    return this.addPatientForm.get('email_id');\n  }\n  /*get Username(){\n    return this.addPatientForm.get('username');\n  }*/\n  get doctor_id(){\n    return this.addPatientForm.get('doctor_id');\n  }\n\n  get Password(){\n    return this.addPatientForm.get('password');\n  }\n  addPatient(){\n    this.isLoading=true;\n    setTimeout(() => {\n      this.showPage()\n    },5000);\n    //console.warn(this.addPatientForm.value);\n    this.savePatient();\n    alert(\"Added Patient Successfully\");\n  }\n  savePatient(){\n    this.serv.createPatient(this.patient).subscribe( data =>{\n      console.log(data);\n      this.gotoPatientsList();\n    },\n    error => console.log(error));\n  }\n  gotoPatientsList() {\n    this.router.navigate(['/admin/edit-view-all-patient']);\n  }\n\n  showPage(){\n    this.isLoading=false;\n    }\n  }","<div class=\"container-fluid\" style=\"padding: 0;\">\n    <div class=\"row align-items-center\" style=\"margin: 0;\n    height: 68rem;\">\n        <div class=\"col-6 col-sm-6 col-md-6 col-xl-6 col-lg-6 col-xxl-6\" style=\"padding: 0;\">\n            <img src=\"https://img.freepik.com/premium-photo/woman-caucasian-doctor-using-computer-check-patient-data-document_10541-5090.jpg?size=626&ext=jpg&ga=GA1.2.286798921.1690094042&semt=ais\"\n                alt=\"\" style=\"height: 68rem;\n                width: 729px;\n                margin-left: 8px;\">\n        </div>\n        <div class=\"col-4 col-sm-4 col-md-4 col-xl-4 col-lg-4 col-xxl-4\"\n            style=\"padding: 0;\n            margin-left: 9rem;\n            height: 51rem;\">\n            <div class=\"card card_div opacity-75\" style=\"background-color: #A8001F;\">\n                <div class=\"card-header text-center\">Add New Patient</div>\n                <div class=\"card-body\">\n                    <div class=\"form_div\">\n                        <form [formGroup]=\"addPatientForm\" (ngSubmit)=\"addPatient()\">\n                            <div class=\"form-floating mb-3\">\n                                <input type=\"number\" class=\"form-control\" id=\"patient_id\" placeholder=\"Example: 01\"\n                                    formControlName=\"patient_id\" [(ngModel)] = \"patient.patient_id\">\n                                <label for=\"patient_id\">Patient's Id</label>\n                            </div>\n                            <div class=\"alert alert-danger\"\n                                *ngIf=\"patient_id && patient_id.invalid && patient_id.touched\">\n                                <div *ngIf=\"patient_id.errors?.['required']\">\n                                    Patient Id is Required\n                                </div>\n                            </div>\n                            <div class=\"form-floating mb-3\">\n                                <input type=\"text\" class=\"form-control\" id=\"patient_name\" placeholder=\"Example: Aboli Pande\"\n                                    formControlName=\"patient_name\" [(ngModel)] = \"patient.patient_name\">\n                                <label for=\"patient_name\">Patient's Name</label>\n                            </div>\n                            <div class=\"alert alert-danger\"\n                                *ngIf=\"patient_name && patient_name.invalid && patient_name.touched\">\n                                <div *ngIf=\"patient_name.errors?.['required']\">\n                                    Patient's Name is Required\n                                </div>\n                                <div *ngIf=\"patient_name.errors?.['pattern']\">\n                                    It should not contain a digit and any special symbol\n                                </div>\n                            </div>\n                            <div class=\"form-floating\">\n                                <select class=\"form-select\" id=\"gender\" aria-label=\"Floating label select example\"\n                                    formControlName=\"gender\" [(ngModel)] = \"patient.gender\">\n                                    <!--<option selected>Please select gender </option>-->\n                                    <option value=\"Male\">Male</option>\n                                    <option value=\"Female\">Female</option>\n                                </select>\n                                <label for=\"gender\">Gender</label>\n                            </div>\n                            <div class=\"alert alert-danger\"\n                                *ngIf=\"Gender && Gender.invalid && Gender.touched\">\n                                <div *ngIf=\"Gender.errors?.['required']\">\n                                    Gender is Required\n                                </div>\n                            </div>\n                            <!--<div class=\"form-floating mb-3\">\n                                <input type=\"date\" class=\"form-control\" id=\"dob\" placeholder=\"Date Of Birth\"\n                                    formControlName=\"dob\">\n                                <label for=\"dob\">Date Of Birth</label>\n                            </div>\n                            <div class=\"alert alert-danger\" *ngIf=\"Dob && Dob.touched && Dob.invalid\">\n                                <div *ngIf=\"Dob.errors?.['required']\">\n                                    Date of birth is required\n                                </div>\n                            </div>-->\n                            <div class=\"form-floating\">\n                                <textarea class=\"form-control\" placeholder=\"Your Address\" id=\"address\"\n                                    style=\"height: 100px\" formControlName=\"address\" [(ngModel)] = \"patient.address\"></textarea>\n                                <label for=\"address\">Address</label>\n                            </div>\n                            <div class=\"alert alert-danger\"\n                                *ngIf=\"Address && Address.invalid && Address.touched\">\n                                <div *ngIf=\"Address.errors?.['required']\">\n                                    Address is Required\n                                </div>\n                            </div>\n                            <div class=\"form-floating mb-3\">\n                                <input type=\"text\" class=\"form-control\" id=\"contact_no\" placeholder=\"Your Phone No\"\n                                    formControlName=\"contact_no\" [(ngModel)] = \"patient.contact_no\">\n                                <label for=\"contact_no\">Contact No</label>\n                            </div>\n                            <div class=\"alert alert-danger\" *ngIf=\"Contact_No && Contact_No.touched && Contact_No.invalid\">\n                                <div *ngIf=\"Contact_No.errors?.['required']\">\n                                    Contact No is required\n                                </div>\n                                <div *ngIf=\"Contact_No.errors?.['minlength']\">                                   \n                                     It should be a 10 digit number\n                                </div>\n                                <div *ngIf=\"Contact_No.errors?.['maxlength']\">                                   \n                                    Its not a valid number\n                               </div>\n                            </div>\n                            <div class=\"form-floating mb-3\">\n                                <select name=\"s1\" id=\"\" *ngFor=\"let item of doctors\">\n                                    <option value=\"{{doctors.doctor_id}}\"></option>\n                                </select>\n                                <label for=\"doctor_id\">Doctor's Id</label>\n                            </div>\n                            <!--<div class=\"form-floating mb-3\">\n                                <input type=\"number\" class=\"form-control\" id=\"doctor_id\" placeholder=\"Doctor Id\"\n                                    formControlName=\"doctor_id\" [(ngModel)] = \"doctor.doctor_id\">\n                                <label for=\"doctor_id\">Doctor's Id</label>\n                            </div>-->\n                            <div class=\"alert alert-danger\"\n                                *ngIf=\"doctor_id && doctor_id.invalid && doctor_id.touched\">\n                                <div *ngIf=\"doctor_id.errors?.['required']\">\n                                    Doctor Id is Required\n                                </div>\n                            </div>\n                            <div class=\"form-floating mb-3\">\n                                <input type=\"date\" class=\"form-control\" id=\"app_date\" placeholder=\"Appointment Date\"\n                                    formControlName=\"app_date\" [(ngModel)] = \"patient.app_date\">\n                                <label for=\"app_date\">Appointment Date</label>\n                            </div>\n                            <div class=\"alert alert-danger\" *ngIf=\"app_date && app_date.touched && app_date.invalid\">\n                                <div *ngIf=\"app_date.errors?.['required']\">\n                                    Appointment Date is required\n                                </div>\n                            </div>\n                            <div class=\"form-floating mb-3\">\n                                <input type=\"number\" class=\"form-control\" id=\"payment\" placeholder=\"Payment\"\n                                    formControlName=\"payment\" [(ngModel)] = \"patient.payment\">\n                                <label for=\"payment\">Payment</label>\n                            </div>\n                            <div class=\"alert alert-danger\"\n                                *ngIf=\"payment && payment.invalid && payment.touched\">\n                                <div *ngIf=\"payment.errors?.['required']\">\n                                    Payment is Required\n                                </div>\n                            </div>\n                            <div class=\"form-floating mb-3\">\n                                <input type=\"email\" class=\"form-control\" id=\"email_id\" placeholder=\"name@example.com\"\n                                    formControlName=\"email_id\" [(ngModel)] = \"patient.email_id\">\n                                <label for=\"email_id\">Email Id</label>\n                            </div>\n                            <div class=\"alert alert-danger\"\n                                *ngIf=\"Email_id && Email_id.invalid && Email_id.touched\">\n                                <div *ngIf=\"Email_id.errors?.['required']\">\n                                    Email Id is Required\n                                </div>\n                                <div *ngIf=\"Email_id.errors?.['pattern']\">\n                                    Email Id is not in the correct format\n                                </div>\n                            </div>\n                            <!--<div class=\"form-floating mb-3\">\n                                <input type=\"text\" class=\"form-control\" id=\"username\" placeholder=\"Username\"\n                                    formControlName=\"username\">\n                                <label for=\"username\">Username</label>\n                            </div>\n                            <div class=\"alert alert-danger\" *ngIf=\"Username && Username.touched && Username.invalid\">\n                                <div *ngIf=\"Username.errors?.['required']\">\n                                    Username is required\n                                </div>\n                                <div *ngIf=\"Username.errors?.['pattern']\">\n                                    Username must not contain any whitespace\n                                </div>\n                            </div>-->\n                            <div class=\"form-floating\">\n                                <input type=\"password\" class=\"form-control\" id=\"txt_password\" placeholder=\"Password\"\n                                    formControlName=\"password\" [(ngModel)] = \"patient.password\">\n                                <label for=\"txt_password\">Password</label>\n                            </div>\n                            <div class=\"alert alert-danger\" *ngIf=\"Password && Password.touched && Password.invalid\">\n                                <div *ngIf=\"Password.errors?.['required']\">\n                                    Password is required\n                                </div>\n                                <div *ngIf=\"Password.errors?.['pattern']\">\n                                    Password is must be of atleast 8 characters long,must contain 1 uppercase,1 lowercase and a special symbol and a digit\n                                </div>\n                            </div>\n                                <button  type=\"submit\" class=\"btn submit_btn btn-outline-success\" [disabled]=\"addPatientForm.invalid\">Add Patient</button>\n                                <button type=\"reset\" class=\"btn btn-outline-warning clearbtn\">Clear</button>\n                                <div id=\"spin\" class=\"spinner-border text-success spinner_div\" role=\"status\"\n                                *ngIf=\"isLoading;\">\n                                <span class=\"visually-hidden\">Loading...</span>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}