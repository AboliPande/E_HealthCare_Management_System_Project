{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class ChangeUsernameComponent {\n  constructor(router) {\n    this.router = router;\n    this.loginForm = new FormGroup({\n      emailId: new FormControl('', [Validators.required, Validators.pattern('[a-z0-9]+@[a-z]+\\.[a-z].{2,3}')]),\n      password: new FormControl('', [Validators.required, Validators.pattern('(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*_]).{8,}')]),\n      userType: new FormControl('', [Validators.required])\n    });\n  }\n  get emailId() {\n    return this.loginForm.get('emailId');\n  }\n  get password() {\n    return this.loginForm.get('password');\n  }\n  get userType() {\n    return this.loginForm.get('userType');\n  }\n  loginFormSubmit() {\n    this.isLoading = true;\n    setTimeout(() => {\n      this.showPage();\n    }, 3000);\n  }\n  showPage() {\n    this.isLoading = false;\n    if (!this.isLoading) {\n      this.router.navigate(['/admin/dashboard']);\n    }\n  }\n  clearForm() {\n    /*this.loginForm.emailId = \" \";\r\n    this.loginForm.value.password = \"\";\r\n    this.loginForm.value.userType = \"\";*/\n  }\n}\nChangeUsernameComponent.ɵfac = function ChangeUsernameComponent_Factory(t) {\n  return new (t || ChangeUsernameComponent)(i0.ɵɵdirectiveInject(i1.Router));\n};\nChangeUsernameComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChangeUsernameComponent,\n  selectors: [[\"app-change-username\"]],\n  decls: 2,\n  vars: 0,\n  template: function ChangeUsernameComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"change-username works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;AAQnE,OAAM,MAAOC,uBAAuB;EAkBlCC,YAAoBC,MAAa;IAAb,WAAM,GAANA,MAAM;IAhB1B,cAAS,GAAG,IAAIJ,SAAS,CAAC;MACxBK,OAAO,EAAC,IAAIN,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACK,QAAQ,EAACL,UAAU,CAACM,OAAO,CAAC,+BAA+B,CAAC,CAAC,CAAC;MACrGC,QAAQ,EAAC,IAAIT,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACK,QAAQ,EAChDL,UAAU,CAACM,OAAO,CAAC,yDAAyD,CAAC,CAAC,CAAC;MAC/EE,QAAQ,EAAC,IAAIV,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACK,QAAQ,CAAC;KAClD,CAAC;EAaF;EAZA,IAAID,OAAO;IACT,OAAO,IAAI,CAACK,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;EACtC;EACA,IAAIH,QAAQ;IACV,OAAO,IAAI,CAACE,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;EACvC;EACA,IAAIF,QAAQ;IACV,OAAO,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;EACvC;EAKAC,eAAe;IACb,IAAI,CAACC,SAAS,GAAC,IAAI;IACnBC,UAAU,CAAC,MAAK;MACd,IAAI,CAACC,QAAQ,EAAE;IACjB,CAAC,EAAE,IAAI,CAAC;EACV;EACAA,QAAQ;IACN,IAAI,CAACF,SAAS,GAAC,KAAK;IACpB,IAAG,CAAC,IAAI,CAACA,SAAS,EAAC;MACjB,IAAI,CAACT,MAAM,CAACY,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;;EAE9C;EACAC,SAAS;IACP;;;EAAA;;AAlCSf,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAgB;EAAAC;EAAAC;EAAAC;IAAA;MCTpCC,yBAAG;MAAAA,sCAAsB;MAAAA,iBAAI","names":["FormControl","FormGroup","Validators","ChangeUsernameComponent","constructor","router","emailId","required","pattern","password","userType","loginForm","get","loginFormSubmit","isLoading","setTimeout","showPage","navigate","clearForm","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["G:\\P1\\E_HealthCare_Management_System\\src\\app\\change-username\\change-username.component.ts","G:\\P1\\E_HealthCare_Management_System\\src\\app\\change-username\\change-username.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-change-username',\n  templateUrl: './change-username.component.html',\n  styleUrls: ['./change-username.component.css']\n})\nexport class ChangeUsernameComponent {\n  isLoading:boolean | undefined;\n  loginForm = new FormGroup({\n    emailId:new FormControl('',[Validators.required,Validators.pattern('[a-z0-9]+@[a-z]+\\.[a-z].{2,3}')]),\n    password:new FormControl('',[Validators.required,\n    Validators.pattern('(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*_]).{8,}')]),\n    userType:new FormControl('',[Validators.required])\n  });\n  get emailId(){\n    return this.loginForm.get('emailId');\n  }\n  get password(){\n    return this.loginForm.get('password');\n  }\n  get userType(){\n    return this.loginForm.get('userType');\n  }\n  \n  constructor(private router:Router){\n    \n  }\n  loginFormSubmit(){\n    this.isLoading=true;\n    setTimeout(() => {\n      this.showPage()\n    }, 3000);\n  }\n  showPage(){\n    this.isLoading=false;\n    if(!this.isLoading){\n      this.router.navigate(['/admin/dashboard']);\n    }\n  }\n  clearForm(){\n    /*this.loginForm.emailId = \" \";\n    this.loginForm.value.password = \"\";\n    this.loginForm.value.userType = \"\";*/\n\n  }\n}\n","<p>change-username works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}