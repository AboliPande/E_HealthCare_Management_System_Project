{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet ChangePasswordComponent = class ChangePasswordComponent {\n  constructor(el) {\n    this.el = el;\n    this.changePasswordForm = new FormGroup({\n      patient_id: new FormControl('', [Validators.required]),\n      change_old_password: new FormControl('', [Validators.required, Validators.pattern('(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*_]).{8,}')]),\n      confirm_new_password: new FormControl('', [Validators.required, Validators.pattern('(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*_]).{8,}')])\n    });\n  }\n  get patient_id() {\n    return this.changePasswordForm.get('patient_id');\n  }\n  get change_old_password() {\n    return this.changePasswordForm.get('change_old_password');\n  }\n  get confirm_new_password() {\n    return this.changePasswordForm.get('confirm_new_password');\n  }\n  changePasswordFormSubmit() {\n    this.isLoading = true;\n    setTimeout(() => {\n      this.showPage();\n    }, 3000);\n    if (this.changePasswordForm.get('change_old_password') == this.changePasswordForm.get('confirm_new_password')) {\n      alert(\"Changed Succesfully\");\n    } else {\n      alert(\"Cannot Change\");\n      alert(\"Both the passwords are not matching\");\n    }\n  }\n  showPage() {\n    this.isLoading = false;\n    /* if(!this.isLoading){\r\n       this.router.navigate(['/admin/admin-header/']);\r\n     }*/\n  }\n};\n\nChangePasswordComponent = __decorate([Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})], ChangePasswordComponent);\nexport { ChangePasswordComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAyC,eAAe;AAC1E,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAO5D,IAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAgBlCC,YAAoBC,EAAa;IAAb,OAAE,GAAFA,EAAE;IAdtB,uBAAkB,GAAG,IAAIJ,SAAS,CAAC;MACjCK,UAAU,EAAC,IAAIN,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACK,QAAQ,CAAC,CAAC;MACpDC,mBAAmB,EAAC,IAAIR,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACK,QAAQ,EAACL,UAAU,CAACO,OAAO,CAAC,yDAAyD,CAAC,CAAC,CAAC;MAC3IC,oBAAoB,EAAC,IAAIV,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACK,QAAQ,EAACL,UAAU,CAACO,OAAO,CAAC,yDAAyD,CAAC,CAAC;KAC5I,CAAC;EAUmC;EATrC,IAAIH,UAAU;IACZ,OAAO,IAAI,CAACK,kBAAkB,CAACC,GAAG,CAAC,YAAY,CAAC;EAClD;EACA,IAAIJ,mBAAmB;IACrB,OAAO,IAAI,CAACG,kBAAkB,CAACC,GAAG,CAAC,qBAAqB,CAAC;EAC3D;EACA,IAAIF,oBAAoB;IACtB,OAAO,IAAI,CAACC,kBAAkB,CAACC,GAAG,CAAC,sBAAsB,CAAC;EAC5D;EAEAC,wBAAwB;IACtB,IAAI,CAACC,SAAS,GAAC,IAAI;IACnBC,UAAU,CAAC,MAAK;MACd,IAAI,CAACC,QAAQ,EAAE;IACjB,CAAC,EAAE,IAAI,CAAC;IACR,IAAG,IAAI,CAACL,kBAAkB,CAACC,GAAG,CAAC,qBAAqB,CAAC,IAAE,IAAI,CAACD,kBAAkB,CAACC,GAAG,CAAC,sBAAsB,CAAC,EAAC;MACzGK,KAAK,CAAC,qBAAqB,CAAC;KAC7B,MACG;MACFA,KAAK,CAAC,eAAe,CAAC;MACtBA,KAAK,CAAC,qCAAqC,CAAC;;EAEhD;EACAD,QAAQ;IACN,IAAI,CAACF,SAAS,GAAC,KAAK;IACrB;;;EAGD;CACD;;AApCYX,uBAAuB,eALnCJ,SAAS,CAAC;EACTmB,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,GACWjB,uBAAuB,CAoCnC;SApCYA,uBAAuB","names":["Component","FormControl","FormGroup","Validators","ChangePasswordComponent","constructor","el","patient_id","required","change_old_password","pattern","confirm_new_password","changePasswordForm","get","changePasswordFormSubmit","isLoading","setTimeout","showPage","alert","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["G:\\P1\\E_HealthCare_Management_System\\src\\app\\change-password\\change-password.component.ts"],"sourcesContent":["import { Component, ElementRef, HostListener, Input } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent {\n  isLoading:boolean | undefined;\n  changePasswordForm = new FormGroup({\n    patient_id:new FormControl('',[Validators.required]),\n    change_old_password:new FormControl('',[Validators.required,Validators.pattern('(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*_]).{8,}')]),\n    confirm_new_password:new FormControl('',[Validators.required,Validators.pattern('(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*_]).{8,}')])\n  });\n  get patient_id(){\n    return this.changePasswordForm.get('patient_id');\n  }\n  get change_old_password(){\n    return this.changePasswordForm.get('change_old_password');\n  }\n  get confirm_new_password(){\n    return this.changePasswordForm.get('confirm_new_password');\n  }\n  constructor(private el:ElementRef) { }\n  changePasswordFormSubmit(){\n    this.isLoading=true;\n    setTimeout(() => {\n      this.showPage()\n    }, 3000);\n    if(this.changePasswordForm.get('change_old_password')==this.changePasswordForm.get('confirm_new_password')){\n      alert(\"Changed Succesfully\");\n    }\n    else{\n      alert(\"Cannot Change\");\n      alert(\"Both the passwords are not matching\")\n    }\n  }\n  showPage(){\n    this.isLoading=false;\n   /* if(!this.isLoading){\n      this.router.navigate(['/admin/admin-header/']);\n    }*/\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}